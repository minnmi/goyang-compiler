; Generated by goyangi Compiler.

; compile the program using commands like:
;	fasm [output code].asm [output object].o

format ELF



section '.text' executable

	public main
	main:

	extrn printf
	extrn scanf
begin_0:
	PUSH	str_2
	PUSH	string_mask
	CALL	printf
	PUSH	numero
	PUSH	int_mask
	CALL	scanf
	MOV	EAX, [numero]
	MOV	EBX, 5
	CMP	EAX, EBX
	JL	else_1
	PUSH	str_3
	PUSH	string_mask
	CALL	printf
	MOV	EAX, [numero]
	MOV	EBX, 6
	CMP	EAX, EBX
	JL	else_2
	PUSH	str_4
	PUSH	string_mask
	CALL	printf
	MOV	EAX, [numero]
	MOV	EBX, 7
	CMP	EAX, EBX
	JL	else_3
	PUSH	str_5
	PUSH	string_mask
	CALL	printf
	MOV	EAX, [numero]
	MOV	EBX, 10
	CMP	EAX, EBX
	JL	else_4
	PUSH	str_6
	PUSH	string_mask
	CALL	printf
	JMP	end_4
else_4:
	PUSH	str_7
	PUSH	string_mask
	CALL	printf
end_4:
	JMP	end_3
else_3:
end_3:
	JMP	end_2
else_2:
end_2:
	JMP	end_1
else_1:
end_1:
end_0:
	mov	EAX, 1
	XOR	EBX, EBX
	INT	0x80

section '.data' writeable

string_mask	db	"%s", 0
int_mask  	db	"%d", 0
str_2     	db	"Digite um numero", 0xA, 0
str_3     	db	"Maior que 5.", 0xA, 0
str_4     	db	"Maior que 6.", 0xA, 0
str_5     	db	"Maior que 7.", 0xA, 0
str_6     	db	"Maior que 10.", 0xA, 0
str_7     	db	"Menor ou igual a 10.", 0xA, 0
numero    	dd	0
