; Generated by goyangi Compiler.

; compile the program using commands like:
;	fasm [output code].asm [output object].o

format ELF



section '.text' executable

	public main
	main:
	;importando os métodos externos
	extrn printf  
	extrn fflush
	extrn stdout
	extrn scanf
begin_0:
	;Da um push na pilha de execucao
	PUSH	str_2  ;Coloca str_2 no topo da pilha
	PUSH	string_mask
	CALL	printf ;Chama o método

	PUSH	numero
	PUSH	int_mask
	CALL	scanf

	MOV	EBX, 1 ;O mov MOVE o 1 para o EBX
	MOV	EAX, fatorial
	MOV	[EAX], EBX ;o colchete é o endereco efetivo
begin_1:
	MOV	EAX, [numero]
	MOV	EBX, 1
	CMP	EAX, EBX ;Compara os registradores e atualiza as flags
	JL	end_1 ;salta só se for menor
	MOV	EBX, [numero]
	MOV	EAX, [fatorial]
	IMUL	EAX, EBX ;multiplica inteiros com sinal
	PUSH	EAX
	POP	EBX ;remove e coloca o valor removido em ebx
	MOV	EAX, fatorial
	MOV	[EAX], EBX
	MOV	EBX, 1
	MOV	EAX, [numero]
	SUB	EAX, EBX ;Subtrai
	PUSH	EAX
	POP	EBX
	MOV	EAX, numero
	MOV	[EAX], EBX
	JMP	begin_1 ;Salto incondicional
end_1:

	PUSH	[fatorial]
	PUSH	int_mask
	CALL	printf

	push dword [stdout] 
	call fflush
end_0:
	mov	EAX, 1 
	XOR	EBX, EBX
	INT	0x80

section '.data' writeable

str_3     	db	"fatorial:", 0xA, 0 ;variaveis criadas
string_mask	db	"%s", 0
str_2     	db	"Escreva um numero", 0xA, 0
int_mask  	db	"%d", 0 
numero    	dd	0
fatorial  	dd	0
