; Generated by goyangi Compiler.

; compile the program using commands like:
;	fasm [output code].asm [output object].o

format ELF



section '.text' executable

	public main
	main:

	extrn printf
	extrn scanf
begin_0:
	PUSH	str_2
	PUSH	string_mask
	CALL	printf
	PUSH	inicio
	PUSH	int_mask
	CALL	scanf
	PUSH	str_3
	PUSH	string_mask
	CALL	printf
	PUSH	fim
	PUSH	int_mask
	CALL	scanf
	PUSH	str_4
	PUSH	string_mask
	CALL	printf
	PUSH	passo
	PUSH	int_mask
	CALL	scanf
begin_1:
	MOV	EAX, [inicio]
	MOV	EBX, [fim]
	CMP	EAX, EBX
	JNL	end_1
	PUSH	[inicio]
	PUSH	int_mask
	CALL	printf
	PUSH	str_5
	PUSH	string_mask
	CALL	printf
	MOV	EBX, [passo]
	MOV	EAX, [inicio]
	SUB	EAX, EBX
	PUSH	EAX
	POP	EBX
	MOV	EAX, inicio
	MOV	[EAX], EBX
	JMP	begin_1
end_1:
	PUSH	[inicio]
	PUSH	int_mask
	CALL	printf
	PUSH	str_6
	PUSH	string_mask
	CALL	printf
end_0:
	mov	EAX, 1
	XOR	EBX, EBX
	INT	0x80

section '.data' writeable

string_mask	db	"%s", 0
int_mask  	db	"%d", 0
str_2     	db	"Digite o inicio", 0xA, 0
str_3     	db	"Digite o fim", 0xA, 0
str_4     	db	"Digite o passo", 0xA, 0
str_5     	db	",", 0xA, 0
str_6     	db	"", 0xA, 0
inicio    	dd	0
fim       	dd	0
passo     	dd	0
