; Generated by goyangi Compiler.

; compile the program using commands like:
;	fasm [output code].asm [output object].o

format ELF



section '.text' executable

	public main
	main:

	extrn printf
	extrn scanf
begin_0:
	PUSH	str_2
	PUSH	string_mask
	CALL	printf
	PUSH	num
	PUSH	int_mask
	CALL	scanf
	MOV	EAX, [num]
	MOV	EBX, 0
	CMP	EAX, EBX
	JNL	else_1
	PUSH	str_3
	PUSH	string_mask
	CALL	printf
	JMP	end_1
else_1:
end_1:
begin_2:
	MOV	EAX, [num]
	MOV	EBX, 0
	CMP	EAX, EBX
	JL	end_2
	PUSH	[num]
	PUSH	int_mask
	CALL	printf
	MOV	EBX, 1
	MOV	EAX, [num]
	SUB	EAX, EBX
	PUSH	EAX
	POP	EBX
	MOV	EAX, num
	MOV	[EAX], EBX
	JMP	begin_2
end_2:
end_0:
	mov	EAX, 1
	XOR	EBX, EBX
	INT	0x80

section '.data' writeable

string_mask	db	"%s", 0
int_mask  	db	"%d", 0
str_2     	db	"Digite um numero", 0xA, 0
str_3     	db	"Numero negativo nao valido", 0xA, 0
num       	dd	0
